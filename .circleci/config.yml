# Udacity DevOps program Capstone project
version: 2.1
executors:
  docker:
    docker:
      - image: docker
  python:
    docker:
      - image: python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

commands:
  destroy_environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    parameters:
      workflow_id:
        type: string
      event:
        type: string
    steps:
      - run:
          name: Destroy environments <<parameters.workflow_id>>
          when: <<parameters.event>>
          command: |
            eksctl delete cluster --name e-capstone-<<parameters.workflow_id>>

jobs:
  lint:
    executor: python
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install --no-cache-dir Flask==1.1.2
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            hadolint Dockerfile

  build:
    machine: true
    steps:
      - checkout
      - run: |
          docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASS}
          docker build -t eslam2017/e-capstone:${CIRCLE_WORKFLOW_ID:0:7} .
          docker push eslam2017/e-capstone:${CIRCLE_WORKFLOW_ID:0:7}
          docker push eslam2017/e-capstone:latest

  # deploy_eks_cluster:
  #   executor: aws
  #   steps:
  #     - run:
  #       name: Install dependencies.
  #       command: |
  #         curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
  #         sudo mv /tmp/eksctl /usr/local/bin
  #         eksctl version
  #     - run:
  #       name: Creating the EKS cluster.
  #       command: |
  #         eksctl create cluster --name e-capstone-${CIRCLE_WORKFLOW_ID:0:7} --fargate --asg-access
  #     - destroy_environment:
  #         workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}
  #         event: on_fail




workflows:
  e-capstone:
    jobs:
      - lint
      - build:
          requires:
            - "lint"


# aws eks update-kubeconfig --region us-west-2 --name help --kubeconfig config-2

# eksctl create cluster --name my-cluster --region us-west-2 --fargate